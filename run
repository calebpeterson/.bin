#!/usr/bin/env zx

import { choose } from "./lib/index.mjs";

const filter = argv._[0] ?? "";

const maybePackagePath = path.join(process.cwd(), "package.json");
const hasPackage = await fs.pathExists(maybePackagePath);

if (!hasPackage) {
  console.error(`${process.cwd()} does not include a package.json`);
  process.exit(1);
}

const { scripts } = await fs.readJson(maybePackagePath);

const target = await choose(Object.keys(scripts), filter);

if (target) {
  const runner = fs.existsSync(path.join(process.cwd(), "yarn.lock"))
    ? "yarn"
    : fs.existsSync(path.join(process.cwd(), "pnpm-lock.yaml"))
    ? "pnpm"
    : "npm";
  const { stdout, stderr } = await $`${runner} run ${target}`;

  if (stdout) {
    console.log(stdout);
  }

  if (stderr) {
    console.log(stderr);
  }
}
